@inject Microsoft.Extensions.Localization.IStringLocalizer<AddEditMoneyLineModal> _localizer
@using FlexMoney.Application.Features.Types.Queries.GetAll;
@using FlexMoney.Application.Features.Members.Queries.GetAll;
@using System.Globalization
<style>
    select{
        width: 100%;
        height: 100%;
        border: 1px solid rgb(189 189 189);
        border-radius: 3px;
    }
    select:focus {
    border-color: #007bff;
    outline: none;
    }
</style>
<EditForm Model="@AddEditMoneyLineModel" OnValidSubmit="SaveAsync">
    <FluentValidationValidator @ref="_fluentValidationValidator" />
    <MudDialog Style="min-width: 500px; max-width: 1200px;">
        <TitleContent>
            @{
                if (AddEditMoneyLineModel.Id == 0)
                {
                    <MudText Typo="Typo.h6">
                        <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3 mb-n1" />
                        @_localizer["Add Money Line"]
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.h6">
                        <MudIcon Icon="@Icons.Material.Filled.Update" Class="mr-3 mb-n1" />
                        @_localizer["Update Money Line"]
                    </MudText>
                }
            }
        </TitleContent>
        <DialogContent>
            <MudGrid>
                @if (AddEditMoneyLineModel.Id != 0)
                {
                    <MudItem xs="12" md="6">
                        <MudTextField Disabled For="@(() => AddEditMoneyLineModel.Id)" @bind-Value="AddEditMoneyLineModel.Id" Label="@_localizer["Id"]" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudSelect T="GetAllTypesResponse" Label="Select a type" Variant="Variant.Filled" ValueChanged="HandleTypeChange" >
                            @foreach (var type in _moneyTypeList)
                            {
                                <MudSelectItem Value="@type">@type.Name</MudSelectItem>
                            }
                        </MudSelect>
                    </MudItem>
                }
                else
                {
                    <MudItem xs="12" md="6">
                        <MudSelect T="GetAllTypesResponse" Label="Select a type" Variant="Variant.Filled" ValueChanged="HandleTypeChange" >
                            @foreach (var type in _moneyTypeList)
                            {
                                <MudSelectItem Value="@type">@type.Name</MudSelectItem>
                            }
                        </MudSelect>
                    </MudItem>
                    <MudItem xs="12" md="6">
                    </MudItem>
                }
                
                <MudItem xs="8" md="3">
                    <select multiple="@true">
                        @foreach (var item in _allMember)
                        {
                            <option @onclick="@(() => InvokeModal(item.Id))">@item.Name</option>
                        }
                    </select>
                </MudItem>
                <MudItem xs="12" md="2">
                    <MudButton @onclick="@(()=> AddFlexmoneyLineCart())"  Style="width: 100%;">@_localizer[">>"]</MudButton>
                    <MudButton @onclick="@(()=> DeleMemberInList())" Style="width: 100%;">@_localizer["<<"]</MudButton>
                </MudItem>
                <MudItem xs="8" md="3">
                    <select multiple="@true">
                        @foreach (var item in _allSelectedMember)
                        {
                            <option @onclick="@(() => InvokeModal1(item.Id))">@item.Name</option>
                        }
                    </select>
                </MudItem>


                <MudItem xs="15" md="4">
                    <MudTextField T="string" For="@(() => AddEditMoneyLineModel.Name)" @bind-Value="AddEditMoneyLineModel.Name" Label="@_localizer["Name"]" />
                    <div class="d-flex">
                        <MudTextField For="@(() => AddEditMoneyLineModel.Money)" @bind-Value="AddEditMoneyLineModel.Money" Label="@_localizer["Money"]" Variant="Variant.Text" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.AttachMoney" />
                    </div>
                    <MudTextField For="@(() => AddEditMoneyLineModel.Quantity)" @bind-Value="AddEditMoneyLineModel.Quantity" Label="@_localizer["Quantity"]" />
                    <MudSelect T="GetAllMembersResponse" Label="Select an owner" Variant="Variant.Filled" ValueChanged="HandleMemberChange" >
                            @foreach (var type in _allMember)
                            {
                                <MudSelectItem Value="@type">@type.Name</MudSelectItem>
                            }
                        </MudSelect>
                </MudItem>



                <MudItem xs="15" md="18">
                    <MudButton @onclick="@(()=> AddAllMember())">@_localizer["Add All"]</MudButton>
                    <MudButton @onclick="@(()=> DeleteAllMember())">@_localizer["Delete All"]</MudButton>
                </MudItem>
            </MudGrid>
        </DialogContent>
        <DialogActions>
            <MudButton DisableElevation Variant="Variant.Filled" OnClick="Cancel">@_localizer["Cancel"]</MudButton>
            @if (AddEditMoneyLineModel.Id != 0)
            {
                <MudButton DisableElevation Variant="Variant.Filled" ButtonType="ButtonType.Submit" Disabled="@(!Validated)" Color="Color.Secondary">@_localizer["Update"]</MudButton>
            }
            else
            {
                <MudButton DisableElevation Variant="Variant.Filled" ButtonType="ButtonType.Submit" Disabled="@(!Validated)" Color="Color.Success">@_localizer["Save"]</MudButton>
            }
        </DialogActions>
    </MudDialog>
</EditForm>